#!/usr/bin/env bash
# Test script for api.md generated by the Lean API extractor
# - Run `lake build`; on failure print output and exit with same status
# - On success: do NOT print lake build output
# - Compare:
#   (1) api.md "sorry" count  vs  build warnings ("sorry" + "admit")
#   (2) api.md Lean-file count (lines starting with "## " and ending with ".lean")
#       vs actual Lean files under cwd (excluding .lake, lakefile.lean, lean-toolchain)

set -euo pipefail
export LC_ALL=C.UTF-8

err(){ printf "ERROR: %s\n" "$*" >&2; }

command -v lake >/dev/null 2>&1 || { err "lake not found in PATH."; exit 127; }
[[ -f api.md ]] || { err "api.md not found. Run the extractor first."; exit 3; }

echo "== Running: lake build =="
set +e
BUILD_OUTPUT="$(lake build 2>&1)"
BUILD_STATUS=$?
set -e

if (( BUILD_STATUS != 0 )); then
  # On error: print build output to STDOUT and exit with same status
  printf "%s\n" "$BUILD_OUTPUT"
  exit "$BUILD_STATUS"
fi
# Success: do NOT print build output

# --- Count warnings: sorry + admit ---
WARN_ONLY="$(printf "%s\n" "$BUILD_OUTPUT" | grep -i "warning" || true)"
COUNT_WARN_SORRY="$(printf "%s\n" "$WARN_ONLY" | grep -E -i '\bsorry\b' -c || true)"
COUNT_WARN_ADMIT="$(printf "%s\n" "$WARN_ONLY" | grep -E -i '\badmit\b' -c || true)"
COUNT_WARN_TOTAL=$(( COUNT_WARN_SORRY + COUNT_WARN_ADMIT ))

# --- api.md counts ---
# 1) api.md sorry lines (extractor emits `:= sorry` for sorry/admit)
API_SORRY_COUNT="$(grep -E -c ':\s*=\s*sorry\b' api.md || true)"

# 2) api.md Lean-files processed:
#    Lines that start with "## " and end with ".lean" (e.g., "## ./src/Foo.lean")
API_FILES_COUNT="$(grep -E -c '^## .+\.lean$' api.md || true)"

# --- Actual filesystem Lean file count (exclude .lake, lakefile.lean, lean-toolchain) ---
FS_LEAN_COUNT="$(
  find . -type f -name '*.lean' \
    -not -path './.lake/*' \
    -not -name 'lakefile.lean' \
    -not -name 'lean-toolchain' \
  | wc -l | tr -d '[:space:]'
)"

echo "== Summary =="
echo "Warnings (sorry):        $COUNT_WARN_SORRY"
echo "Warnings (admit):        $COUNT_WARN_ADMIT"
echo "Warnings (sorry+admit):  $COUNT_WARN_TOTAL"
echo "api.md sorry count:      $API_SORRY_COUNT"
echo "api.md files (## *.lean):$API_FILES_COUNT"
echo "FS Lean files (actual):  $FS_LEAN_COUNT"

FAIL=0

# Test (1): api.md sorry == build (sorry+admit)
if [[ "$API_SORRY_COUNT" -eq "$COUNT_WARN_TOTAL" ]]; then
  echo "✅ PASS: api.md sorry ($API_SORRY_COUNT) == build warnings (sorry+admit=$COUNT_WARN_TOTAL)"
else
  echo "❌ FAIL: api.md sorry ($API_SORRY_COUNT) != build warnings (sorry+admit=$COUNT_WARN_TOTAL)"
  FAIL=1
fi

# Test (2): api.md Lean-file headings == filesystem Lean files
if [[ "$API_FILES_COUNT" -eq "$FS_LEAN_COUNT" ]]; then
  echo "✅ PASS: api.md file count ($API_FILES_COUNT) == FS Lean files ($FS_LEAN_COUNT)"
else
  echo "❌ FAIL: api.md file count ($API_FILES_COUNT) != FS Lean files ($FS_LEAN_COUNT)"
  FAIL=1
fi

exit "$FAIL"
